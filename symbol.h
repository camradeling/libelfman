/*
 * Auto-added header
 * File: symbol.h
 * Author: camradeling
 * Email: camradeling@gmail.com
 * 2025
 */
//------------------------------------------------------------------------------------------------------------------------------
#ifndef ELFMAN_SYMBOL_H
#define ELFMAN_SYMBOL_H
//------------------------------------------------------------------------------------------------------------------------------
#include <stdint.h>
#include <string>
#include <iterator>
#include <vector>
#include <algorithm>
#include <memory>
#include <elf.h>
//------------------------------------------------------------------------------------------------------------------------------
#include "section.h"
//------------------------------------------------------------------------------------------------------------------------------
namespace ElfMan
{
//------------------------------------------------------------------------------------------------------------------------------
class ObjectFile;
//------------------------------------------------------------------------------------------------------------------------------
class Symbol
{
public:
	Symbol(Elf32_Sym* sym, ElfMan::ObjectFile* obj);
	std::vector<uint8_t> serialize();
	Elf32_Sym symhdr;
	std::string name();
	uint32_t offset();
	int bind();
	bool set_global();
	std::vector<uint8_t> data;
	int index = 0;
	ObjectFile* object = nullptr;
};
//------------------------------------------------------------------------------------------------------------------------------
}//namespace ElfMan
//------------------------------------------------------------------------------------------------------------------------------
#endif/*ELFMAN_SYMBOL_H*/